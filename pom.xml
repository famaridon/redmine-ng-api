<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.famaridon</groupId>
    <artifactId>redmine-ng-api</artifactId>
    <name>redmine-ng-server</name>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>redmine-ng-web</module>
        <module>redmine-ng-web-rest</module>
        <module>redmine-ng-web-rest-api</module>
        <module>redmine-ng-services</module>
        <module>redmine-ng-domain</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <!-- runtime versions -->
        <wildfly.version>14.0.1.Final</wildfly.version>
        <infinispan.version>8.2.8.Final</infinispan.version>
        <jackson.version>2.9.7</jackson.version>
        <fluent-hc.version>4.5.4</fluent-hc.version>
        <jsoup.version>1.11.2</jsoup.version>
        <commons-configuration2.version>2.2</commons-configuration2.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-csv>1.5</commons-csv>
        <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>

        <!-- test version -->
        <junit.version>2.9.7</junit.version>
        <arquillian.version>1.2.1.Final</arquillian.version>
        <wildfly-arquillian-container.version>2.1.0.Final</wildfly-arquillian-container.version>
        <shrinkwrap-resolver.version>3.1.2</shrinkwrap-resolver.version>

        <!-- maven plugins version -->
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>3.2.0</maven-war-plugin.version>
        <maven-ejb-plugin.version>3.0.0</maven-ejb-plugin.version>
        <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
        <wildfly-maven-plugin.version>1.2.1.Final</wildfly-maven-plugin.version>

        <!-- java configuration -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- build configuration -->
        <skipTests>true</skipTests> <!-- we have integration test must have TEST_REDMINE_API_KEY environment variable  -->
        <failOnMissingWebXml>false</failOnMissingWebXml>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-javaee8</artifactId>
                <scope>import</scope>
                <type>pom</type>
                <version>${wildfly.version}</version>
            </dependency>

            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-commons</artifactId>
                <version>${infinispan.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
                <version>${org.mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>com.famaridon</groupId>
                <artifactId>redmine-ng-web-rest-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.famaridon</groupId>
                <artifactId>redmine-ng-web-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.famaridon</groupId>
                <artifactId>redmine-ng-services</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.famaridon</groupId>
                <artifactId>redmine-ng-domain</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>fluent-hc</artifactId>
                <version>${fluent-hc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <!-- test dependencies -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${wildfly-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${shrinkwrap-resolver.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Java EE 7 dependency -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
        </dependency>

        <dependency> <!-- hack for intellij -->
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>redmine-ng-api</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${maven-ejb-plugin.version}</version>
                </plugin>
                <!-- The Maven Surefire plugin tests your application. Here we ensure we are using a version compatible with Arquillian -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${wildfly-maven-plugin.version}</version>
                <configuration>
                    <java-opts>
                        <java-opt>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</java-opt>
                    </java-opts>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source> <!-- or higher, depending on your project -->
                    <target>${maven.compiler.target}</target> <!-- or higher, depending on your project -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=cdi
                        </compilerArg>
                        <compilerArg>
                            -Amapstruct.unmappedTargetPolicy=ERROR
                        </compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>with-test-env</id>
            <activation>
                <property>
                    <name>env.TEST_REDMINE_API_KEY</name>
                </property>
            </activation>
            <properties>
                <skipTests>false</skipTests>
            </properties>
        </profile>
    </profiles>
</project>
